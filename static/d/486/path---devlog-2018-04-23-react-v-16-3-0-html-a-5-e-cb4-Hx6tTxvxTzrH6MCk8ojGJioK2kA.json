{"data":{"markdownRemark":{"id":"016abe8e-1f4b-525e-894c-47e9212866be","html":"<p>이번에 <a href=\"https://reactjs.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React</a> 16.3으로 업데이트되면서 기존에 사용중이던</p>\n<ul>\n<li>componentWillMount</li>\n<li>componentWillReceiveProps</li>\n<li>componentWillUpdate</li>\n</ul>\n<p>를 대신할 수 있는 새로운 라이프 사이클이 나왔습니다.</p>\n<p><em>위 라이프 사이클은 React 17부터 사용 할 수 없습니다.</em>\n<em><span style=\"color:#9f9f9f\">(앞에 “UNSAFE_”를 붙이면 사용할 수 있습니다.)</span></em></p>\n<br/>\n<h2 id=\"getderivedstatefromprops\"><a href=\"#getderivedstatefromprops\" aria-label=\"getderivedstatefromprops permalink\" class=\"anchor\"><svg width=\"20\" height=\"20\" aria-hidden=\"true\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getDerivedStateFromProps</h2>\n<p><strong>static getDerivedStateFromProps</strong>는 nextProps와 prevState를 반환하고 리턴으로 setState가 동작합니다.\n새로운 props가 state에 업데이트되지 않길 원한다면 null을 리턴해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  bar<span class=\"token punctuation\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// console.log(nextProps.foo) => 'foo'</span>\n<span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">.</span>foo <span class=\"token operator\">!==</span> prevState<span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      bar<span class=\"token punctuation\">:</span> nextProps<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">,</span> \n      <span class=\"token comment\">// setState({ bar: 'foo' });</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 예제는 nextProps.foo와 prevState.bar를 비교하여 같지않으면 this.state.bar에 nextProps.foo의 값을 setState 하고 같다면 null을 리턴하는 코드입니다.</p>\n<p>예를 들어 nextProps.foo의 값이 ‘foo’라면 prevState.bar의 값과 다르기 때문에 ‘foo’를 리턴해서 this.state.bar에 ‘foo’를 setState하게되어 this.state.bar는 값이 ‘bar’에서 ‘foo’로 바뀌게 됩니다.</p>\n<br/>\n<h2 id=\"getsnapshotbeforeupdate\"><a href=\"#getsnapshotbeforeupdate\" aria-label=\"getsnapshotbeforeupdate permalink\" class=\"anchor\"><svg width=\"20\" height=\"20\" aria-hidden=\"true\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getSnapshotBeforeUpdate</h2>\n<p><strong>getSnapshotBeforeUpdate</strong>는 prevProps와 prevState를 반환하고 리턴을 하게 되면 componentDidUpdate의 3번째 파라미터로 받을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token function\">getSnapshotBeforeUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> prevState<span class=\"token punctuation\">,</span> snapshot</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// snapshot에 'foo'가 들어온다.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<br/>\n<h2 id=\"code\"><a href=\"#code\" aria-label=\"code permalink\" class=\"anchor\"><svg width=\"20\" height=\"20\" aria-hidden=\"true\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CODE</h2>\n<p>새로운 두 Lifecycle을 알아보게 된 이유는 기존의 프로젝트에서 React 17에서 사라지게 될 3개의 라이프 사이클을 16.3버전에 맞게 변경하기 위해서입니다.</p>\n<br/>\n<h3 id=\"before\"><a href=\"#before\" aria-label=\"before permalink\" class=\"anchor\"><svg width=\"20\" height=\"20\" aria-hidden=\"true\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BEFORE</h3>\n<p>기존에 react-router를 이용해서 url의 query또는 params가 변경되면 componentWillReceiveProps에서 변경된 데이터를 nextProps로 받아서 api호출을 다시하도록 사용했었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> params <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">callApi</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">componentWillReceiveProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> params <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> nextProps<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">callApi</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h3 id=\"after\"><a href=\"#after\" aria-label=\"after permalink\" class=\"anchor\"><svg width=\"20\" height=\"20\" aria-hidden=\"true\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AFTER</h3>\n<p>BEFORE에 작성한 코드를 getDerivedStateFromProps, getSnapshotBeforeUpdate 그리고 componentDidUpdate를 이용해 react 16.3버전에 맞게 변경한 코드입니다.\n<em><span style=\"color:#9f9f9f\">(더 좋은 방법을 알고계신다면 알려주시면 감사하겠습니다)</span></em></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  seq<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> prevState<span class=\"token punctuation\">.</span>seq<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      seq<span class=\"token punctuation\">:</span> nextProps<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">getSnapshotBeforeUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevState<span class=\"token punctuation\">.</span>seq <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>seq<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>seq<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> prevState<span class=\"token punctuation\">,</span> snapshot</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>snapshot <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">callApi</span><span class=\"token punctuation\">(</span>snapshot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":2,"excerpt":"이번에 React 16.3으로 업데이트되면서 기존에 사용중이던componentWillMountcomponentWillReceivePropscomponentWillUpdate를 대신할 수 있는 새로운 라이프 사이클이 나왔습니다.위 라이프 사이클은 React 17부터 사용 할 수 없습니다.\n(앞에 “UNSAFE_”를 붙이면 사용할 수 있습니다.)getDerivedStateFromPropsstatic getDerivedStateFromProps는 nextProps와 prevState를 반환하고 리턴으로 setState가 동작합니다.\n새로운 props가 state에 업데이트되지 않길 원한다면 null을 리턴해주면 됩니다.위 예제는 nextProps.foo와 prevState.bar를 비교하여 같지않으면 this.state.bar에 nextProps.foo의 값을 setState 하고 같다면 null을 리턴하는 코드입니다.예를 들어 nextProps.foo의 값이 ‘foo…","frontmatter":{"title":"React 16.3: New Lifecycles"},"fields":{"date":"2018년 04월 22일","slug":"/devlog/2018/04/23/react-v16.3.0.html"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/devlog/2018/04/23/react-v16.3.0.html","prev":null,"next":{"node":{"fields":{"redirect":"","slug":"/devlog/2018/05/23/test.html"}}}}}